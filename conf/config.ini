[SHARE]
# variable options: wrf original 2d, wrf-python provided 2d, and h500, h200 
var=slp, U10, V10, h500
# debug mode for small sample tests
debug_mode=False

[TRAINING]

training_start=20110101
training_end=20151231

# 2-D clustering node numbers
# for example, 8 types could be assigned as 1x8 or 2x4
# let the smaller number be the row idx n_nodex
# if n_nodex=1, the topological structure would be 1-D
n_nodex=1
n_nodey=4

#Spread of the neighborhood function, needs to be adequate to the dimensions of the map.
sigma=0.3
# initial learning rate
learning_rate=0.5
# neighbourhood function
nb_func=gaussian

iterations=1000

# preprocessing options: temporal_norm
preprocess_method=temporal_norm

# use grid search to get optimal hyper-parameters
grid_search_opt=True

[GRID_SEARCH]
# format: 0.1, 0.3, 1
gs_sigma=0.1,0.3,0.5,0.8,1.0,1.2
gs_learning_rate=0.01,0.03,0.1, 0.3, 0.5, 1.0
# set n_nodex=1 automatically
gs_1dnodey=8,9,10,11,12
gs_nb_func=gaussian, mexican_hat, bubble, triangle
# resampling interval 
gs_respl_int=1,2,3,4

[OUTPUT]
output_root = ./output/

[OTHER]
src_wrf=/home/dataop/data/nmodel/wrf_fc/
# Set True to link pathwrf output to training input
relink_pathwrf= False 
# Set True to link pathwrf realtime output to inference
relink_realtimewrf= True
