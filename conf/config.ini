[SHARE]

# ntasks for IO, 8 would be enough to occupy full bandwidth 
ntasks=8

# variable options: wrf original 2d, wrf-python provided 2d, and h500, h200 
var=slp, U10, V10, h500
#var=slp, U10, V10, h500

# spatial selection
# downsampling interval, 1 for all grids, 2 for each every two grids
dsmp_interval=1 
# start/end grid for S-N/W-E direction
s_sn=10
e_sn=182
s_we=10
e_we=240


[TRAINING]
# training date range
training_start=20110101
training_end=20121231

# subset hour list, for example: 0  0,12  0,6,12,18 -1 for all hours
sub_hrs=0, 12

# sub month list, for example: 12,1,2  6,7,8  -1 for all months
sub_mons=-1

# 2-D clustering node numbers
# for example, 8 types could be assigned as 1x8 or 2x4
# let the smaller number be the row idx n_nodex
# if n_nodex=1, the topological structure would be 1-D
n_nodex=1
n_nodey=8

# Spread of the neighbourhood function, needs to be adequate to the dimensions of the map.
sigma=0.01
# initial learning rate
learning_rate=0.01
# neighbourhood function
nb_func= gaussian 

iterations=10000

# preprocessing options: 
# temporal_norm (single or multiple variables)
# original (single variable)
preprocess_method=temporal_norm

# use grid search to get optimal hyper-parameters
grid_search_opt=False


[INFERENCE]

# debug mode for small sample tests 
debug_mode=False

# output resample freq, e.g. 1H, 3H, 6H, D
# see https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases
resamp_freq=H

# flag for matching history
match_hist=True

[GRID_SEARCH]

# how many processors for grid search, as
# individual grid search is a standalone task
# user could set nworkers as many as the machine
# provides to expoilt parallelism
gs_nworkers=16

# Spread of the neighbourhood function
# format: 0.1, 0.3, 0.5
gs_sigma= 0.005, 0.01, 0.05
gs_learning_rate=0.005, 0.01, 0.05

# set 2-D topology of SOM nodes
gs_nodexy=1x8,2x4,1x9,3x3,1x10,2x5

# suggest >=2000 for Gaussian
gs_iterations=10000, 20000, 50000

# ONLY gaussian available (Aug 7, 2021)
# If use mexican_hat, please 0.1x sigma and learning_rate for gaussian
gs_nb_func=mexican_hat

[OUTPUT]
output_root = ./output/

[OTHER]
src_wrf=/home/dataop/data/nmodel/wrf_fc/

# Set True to link pathwrf output to training input
relink_pathwrf=False 

# Set True to link pathwrf realtime output to inference
relink_realtimewrf= True

# offset day for realtime forecast relinkage, 
# 1 for yesterday, 2 for the day before yesterday
relink_realtime_offsetday=2
